package com.company;

import java.util.HashMap;
import java.util.Map;

public class OneDayMarketAction {
	//NSE market action for ONE day
	
	public static class OneTickerOneDay{
		//Market action for 1 stock for 1 day
		
		private String m_ticker;
		private String m_series;
		private double m_open;
		private double m_close;
		private double m_high;
		private double m_low;
		private double m_prevClose;
		
		public OneTickerOneDay(String[] oneQuote){
			setM_ticker(oneQuote[0]);
			setM_series(oneQuote[1]);
			setM_open(Double.parseDouble(oneQuote[2]));
			setM_close(Double.parseDouble(oneQuote[3]));
			setM_high(Double.parseDouble(oneQuote[4]));
			setM_low(Double.parseDouble(oneQuote[5]));
			setM_prevClose(Double.parseDouble(oneQuote[6]));
			
		}
		
		//All getters and setters
		public String getM_ticker() {
			return m_ticker;
		}

		public void setM_ticker(String m_ticker) {
			this.m_ticker = m_ticker;
		}

		public String getM_series() {
			return m_series;
		}

		public void setM_series(String m_series) {
			this.m_series = m_series;
		}

		public double getM_open() {
			return m_open;
		}

		public void setM_open(double m_open) {
			this.m_open = m_open;
		}
		
		public double getM_close() {
			return m_close;
		}

		public void setM_close(double m_close) {
			this.m_close = m_close;
		}

		public double getM_high() {
			return m_high;
		}

		public void setM_high(double m_high) {
			this.m_high = m_high;
		}

		public double getM_low() {
			return m_low;
		}

		public void setM_low(double m_low) {
			this.m_low = m_low;
		}

		public double getM_prevClose() {
			return m_prevClose;
		}

		public void setM_prevClose(double m_prevClose) {
			this.m_prevClose = m_prevClose;
		}
		
		
		public double getPctChange(){
			if (this.getM_prevClose()!= 0){
			return (this.getM_close()-this.getM_prevClose())/this.getM_prevClose();
			}
			return Double.NaN;
		
		}

	}

	private Map<String,OneTickerOneDay> mapOfTickers = new HashMap<>();
			//gives the market action today for ticker=XYZ // a Map - which is a key-value pair
	
	
	
}