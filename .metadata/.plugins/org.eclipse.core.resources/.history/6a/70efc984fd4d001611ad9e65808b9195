package com.company;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipInputStream;



public class UnzipUtillity {
		//To abstract the code from 2 operations : 1.) Downloading zip file 2.)unzipping the downloaded zip file
		
	
		private byte S_BYTE_SIZE = 4096;
	
		public static List<String> downloadAndUnzip(String urlString, String zipFilePath, String destDirectory) throws IOException
		{
			
		}
		
		public static List<String> unzip(String zipFilePath, String destDirectory) throws IOException
		{
			List<String> unzippedFileList = new ArrayList<>();
			
			File destDir = new File(destDirectory);
			if (!destDir.exists()){
				destDir.mkdirs(); //create destination directory if it doesnt exists
			}
			
			
			
		}
		
		private static String extractFile(ZipInputStream zipIn, String filePath) throws IOException
		{
			BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(filePath));
			
			byte[] bytesIn = new byte[S_BYTE_SIZE];
			//we need to create (binary) files in chunks of bytes. those chunks needs to be in powers of 2. we choose 4096.
			
			int read = 0;
			
			while ((read=zipIn.read(bytesIn))!= -1) {
				//Extracting one single file from inside that zip file, and saving it bute-by-byte into the corresponding unzipped file in location
				
				bos.write(bytesIn, 0, read);
			}
			
			bos.close();
			
			return filePath;
			
		}
		
}
