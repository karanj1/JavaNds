package algo.mergesort;

public class mergeSort {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*int myArray [] = */
		mergeSortMethod(new int [] {9,8,3,13,87,15,19}, 0, 6);
		//for (int i=0; i < myArray.length; i++){
		//	System.out.println(myArray[i]);
		//}
	}
	
	public static void mergeSortMethod(int a[], int p, int r){
		if (p < r){
			int q = (p + r)/2;
			mergeSortMethod(a, p, q);
			mergeSortMethod(a, q+1, r);
			merge(a, p, q, r);
		}
		
	}
	
	public static void merge(int a[], int p, int q, int r){
		int lc = q-p+1; //left_count = number of elements in left sorted array
		int rc = r-q;   //right_count = number of elements in right sorted array
		int [] L = {};	//Left array
		int [] R = {};	//Right array
		
		for (int i=0; i < lc; i++){
			L[i] = a[i];		//assigning values to left array from main array a[]
		}
		L[lc] = 999999;			//last element of array should be --> infinite //it will be used for comparison purpose
		
		for (int j=0; j < rc; j++){
			R[j] = a[q+1+j];	//assigning values to right array from main array a[]
		}
		R[rc] = 999999;			//last element of array should be --> infinite
		
		int i=0; 
		int j=0;
		
		for (int k = p; p <= r; k++){
			if (L[i] > R[j]){
				a[k] = L[i];
				i++;
			}else if (L[i] < R[j]){
				a[k] = R[j];
				j++;
			}
		}
		
	}
	

}
